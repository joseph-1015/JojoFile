#include<iostream>
#include<vector>
#include<string>

using namespace std;

struct Task {
	int description;
	bool completed;
	//string addTask, displayTask, markTaskCompleted, removeTask;
};

//Function to add new task
void addTask(vector<Task>& tasks) {
	Task newTask;
	cout << "Enter the description of the task: ";
	cin >> newTask.description;

}

//Function to display tasks
void displayTask(const vector<Task>& tasks) {
	cout << "Task:/n";
	for (int index = 0; index < tasks.size(); index++);

}

//Function to mark a task as completed
void markTaskCompleted(vector<Task>& tasks) {
	int index;
	cout << "Enter the index of the task you want mark as completed: ";
	cin >> index;

}

//Function to remove a task from the list
void removeTask(vector<Task>& tasks) {
	int index;
	cout << "Enter the index of the task you want to remove: ";
	cin >> index;


}


int main() {
	int choice;
	vector<Task> tasks;

	do {
		cout << "/n1. View To-Do List" << endl;
		cout << "2. Add Task" << endl;
		cout << "3. Mark Task as completed" << endl;
		cout << "4. Remove Task" << endl;
		cout << "5. Exit" << endl;
		cout << "Enter your choice: " << endl;
		cin >> choice;


		switch (choice) {

		case 1:
			displayTask(tasks);
			break;
		case 2:
			addTask(tasks);
			break;
		case 3:
			markTaskCompleted(tasks);
			break;
		case 4:
			removeTask(tasks);
			break;
		case 5:
			cout << "Exiting the program" << endl;
			return 0;
		default:
			cout << "Invalid choice. Please try again" << endl;
			break;
		}
	} while (choice != 5);


	return 0;
}

